OTN Framer Datasheet
$Id: otn_framer_ds.t2t,v 1.17 2008/08/28 21:17:52 paulo Exp $


%!target: html
%!options: --toc --toc-level 3
%!options: --style style.css
%!encoding: iso-8859-1

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Register Offsets
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%!preproc: OTU_STS_PTR_OFFSET        "0x00"
%!preproc: OTU_STS_OFFSET            "0x01"
%!preproc: OTU_CFG_PTR_OFFSET        "0x02"
%!preproc: OTU_CFG_OFFSET            "0x03"
%!preproc: SM_BEI_CNT_OFFSET         "0x04"
%!preproc: SM_BIP_CNT_OFFSET         "0x05"
%!preproc: OTU_OOF_CNT_OFFSET        "0x06"
%!preproc: OTU_FRAME_CNT_OFFSET      "0x07"
%!preproc: TTI_ACCESS_CTRL_OFFSET    "0x08"
%!preproc: TTI_DATA_OFFSET           "0x09"
%!preproc: FTFL_ACCESS_CTRL_OFFSET   "0x0A"
%!preproc: FTFL_DATA_OFFSET          "0x0B"
%!preproc: ODU_PM_STS_OFFSET         "0x0C"
%!preproc: ODU_PM_CFG_OFFSET         "0x0D"
%!preproc: PM_BEI_CNT_OFFSET         "0x0E"
%!preproc: PM_BIP_CNT_OFFSET         "0x0F"
%!preproc: OPU_RX_PT_OFFSET          "0x10"
%!preproc: OPU_EXP_PT_OFFSET         "0x11"
%!preproc: OPU_TX_PT_OFFSET          "0x12"
%!preproc: TCM_STS_PTR_OFFSET        "0x13"
%!preproc: TCM_CFG_PTR_OFFSET        "0x14"
%!preproc: ODU_TCM_STS_OFFSET        "0x15"
%!preproc: ODU_TCM_CFG_OFFSET        "0x16"
%!preproc: TCM_BEI_CNT_OFFSET        "0x17"
%!preproc: TCM_BIP_CNT_OFFSET        "0x18"
%!preproc: OPU_CFG_OFFSET            "0x19"
%!preproc: OPU_STS_OFFSET            "0x1A"
%!preproc: RX_PJUST_CNT_OFFSET       "0x1B"
%!preproc: RX_NJUST_CNT_OFFSET       "0x1C"
%!preproc: TX_PJUST_CNT_OFFSET       "0x1D"
%!preproc: TX_NJUST_CNT_OFFSET       "0x1E"
%!preproc: FEC_STS_PTR_OFFSET        "0x1F"
%!preproc: FEC_CORRERR_CNT_HI_OFFSET "0x20"
%!preproc: FEC_CORRERR_CNT_LO_OFFSET "0x21"
%!preproc: FEC_UNCORR_CNT_OFFSET     "0x22"
%!preproc: OPU_TSE_CNT_OFFSET        "0x23"

%!postproc(html): '\\(\w+)\\' '<A HREF="#\1">\1</A>'
%!postproc(html): '{([^}]*)}' '<\1>'

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+ Introduction +
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The purpose of this document is to describe a hardware-software interface for the OTN framer block. All the specifications are based on
the requirements of recommendation G.798, which describes the OTN equipment functional blocks.

Tandem connection monitoring (TCM) specifications are preliminary. Further study is needed before hardware implementation of the TCM
functionalities.

ITU-T uses a layering concept with client/server relationships between adjacent layers to represent a transport network.
Any two adjacent network layers are associated in a client/server relationship. Each transport network layer provides transport to the
layer above and uses transport from the layers below. The layer providing transport is termed a server; the layer using transport is
termed client (G.806/3.14).

The OTN layers and client/server relationships are shown in picture below. The termination of the OTS, OMS and OCh layers is performed
at the optical level of the OTN, which is out of the purpose of this document.

  [figures/otn_layers.png]  

The OPU encapsulates the Client signal (e.g. SONET/SDH) and does any rate justification that is needed. It is analogous to the Path
layer in SONET/SDH in that it is mapped at the source, demapped at the sink, and not modified by the network.

The ODU performs similar functions as the Line Overhead in SONET/SDH.

The OTU contains the FEC and performs similar functions as the Section Overhead in SONET/SDH. After the FEC are added, the signal is
then sent to a SERDES (Serializer/Deserializer) to be converted to the Optical Domain.

Figure below provides a better view of the digital (electrical) domain layers (Figure 6-2/G.709).

  [figures/otn_digital_layers.png]  


Recommendation G.798 specifies a library of basic building blocks and a set of rules by which they may be combined in order to describe
an OTN equipment. These building blocks are called 'functions'. There are three types of functions:

  + Adaptation functions
  + Trail termination functions
  + Connection functions
  +

An adaptation function represents the conversion process between server and client layers. Some of the processes that may be present
in an adaptation function are:

  - Scrambling/descrambling
  - Frame alignment
  - Frequency justification
  - Payload type identification
  -

The trail termination function performs the signal integrity supervision of the layer. This includes:
 - Error detection code (parity)
 - Trail trace identifier (i.e. source/destination identifiers)
 - Backward error and defect indications
 -

A connection function provides routing, grooming, protection and restoration. A exemple of connection function is a switching matrix.
The OTN framer implements no connection function.

Figure below shows a diagram of the OTN framer structure in terms of G.798 functions. The receive side functions are called "Sink",
while the transmit side functions are called "Source".

  [figures/otn_blocks.png]  


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+ Receive Processing +
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Figure below depicts all receive processing functions and the status (alarms and performance monitoring data) generated by each one.

  [figures/otn_rx_processing.png]  

In the receive direction, every layer receives a server signal fail indication (SSF) from its server layer, performs supervision of
parameters pertaining to the layer, and generates a server signal fail indication to its client layer. The signal fail state of the
layer is forwarded/indicated via an alarm indication signal (AIS). This is shown in figure below:

  [figures/otn_signal_fail.png]  


The trail signal fail (TSF) indications are generated by a trail termination sink functions to its subsequent adaptation function.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ OTU Receive Processing ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The OTU receive process includes the following functions:

 + OCh to OTU adaptation sink function with FEC (G.798/12.3.1.3)
 + OTU trail termination sink function (G.798/13.2.1.2)
 + OTU to ODU adaptation sink function (G.798/13.3.1.2)
 +

The OCh to OTU dataptation sink function (G.798/12.3.1.3) performs following processes:

 + **Clock recovery:** This function is performed by the PHY chip. It recovers the OTU clock signal from the incoming data. Jitter and
wander tolerace are specified in G.825;
 + **Frame alignment:** The function recovers the OTU frame start as described in clause 8.2.1 of G.798;
 + **Descrambler:** The function performs descrambling as defined in clause 11.2 of G.709;
 + **FEC decoder:** The function extracts the RS(255,239) FEC data from the OTU FEC area and perform error correction as defined in
Annex A of G.709. The number of corrected bits are reported;
 + **Multiframe alignment:** The function recovers the OTU multiframe start as described in clause 8.2.2.
 +

The OTU trail termination sink function (G.798/13.2.1.2) reports the state of the OTU trail. It computes the BIP8, extracts section
monitoring overhead (SMOH) – including the TTI, BIP8, IAE, BDI and BEI signals – in the SM overhead field from the OTU signal,
detects for TIM, DEG and BDI defects, counts errors (detected via the BIP8) and defects, and forwards the error and defect information
as backward indications to the OTU trail termination source function.

The OTU to ODU adaptation sink function (G.798/13.3.1.2) extracts the ODU signal from the OTU. It may insert ODU-AIS under signal fail
conditions ([OTU-TSF #OTU_TSF]). The following processes are performed:

  + **Extract ODU from OTU:** The function extracts the ODU frame from the incoming OTU frame as defined in clause 11.1 of G.709;
  + **ODU-LCK, ODU-AIS:** The function generates the ODU-LCK and ODU-AIS signals as defined in G.709;
  + **Selector:** The normal signal may be replaced by either the ODU-AIS or the ODU-LCK signal. The ODU-LCK signal is specified as a
repeating "0101 0101" pattern in the entire ODU signal. ODU-AIS is specified as all "1"s in the entire ODU signal.
  +

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Optical Channel Loss of Signal (OCh-LOS) Detection +++[OCH_LOS]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The optical channel loss of signal (OCh-LOS) status comes from the SFP/XFP RX_LOS pin. According to the Small Form-factor Pluggable
(SFP) Transceiver MultiSource Agreement (MSA), this pin is set to high during a loss of signal condition. The microprocessor can read
the OCh-LOS status though register \OTU_STS\. When a LOS occurs, the OCH_LOS bit in register \OTU_STS\ is set high. This bit is not set
low until \OTU_STS\ has been read by the microprocessor.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU Alarm Indication Signal (OTU-AIS) Monitoring +++[OTU_AIS]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.3.1)

For OTU-AIS detection, the reverse PN-11 process is applied to the entire received data. At the output of this process an all-ZEROs
pattern will occur if the input data is the PN-11 generic AIS sequence. Both the output and input signals are constantly checked over
an 8192-bit interval for the number of none ZERO bits (= ONE bits). If the number of ONE bits per interval at the output is less than
256 and the number of ONE bits per interval at the input is above or equal to 256 in 3 consecutive intervals, OTU-AIS is raised.
If the number of ONE bits at the output is above or equal to 256 or the number of ONE bits at the input is below 256 in 3 consecutive
intervals, OTU-AIS is cleared. The reverse PN-11 process is described in G.798/6.2.6.3.3. OTU-AIS is set to false when OCh-LOS is
active.

The OTU-AIS status is available through register \OTU_STS\.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Frame Alignment Process +++[OTU_OOF]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/8.2.1)

The frame alignment block searches for the OA1 and OA2 (0xF6 and 0x28 respectively) FAS bytes contained in the OTU frame.
The alignment process has two states, out-of-frame (OOF) and in-frame (IF). In the OOF state, the framing pattern searched for is a
4-byte subset of the OA1 and OA2 bytes. The IF is entered if this subset is found and confirmed one frame period later. In the IF
state, the frame signal is continuously checked with the presumed frame start position for correct alignment. The framing pattern
checked for is the OA1OA2OA2 pattern (bytes 3, 4 and 5 of the first row of the OTU frame). The OOF state is entered if this
subset is not found at the correct position in 5 consecutive frames.

If the framer transitions to OOF state, it keeps the current frame position while it hunts for the new frame alignment. While hunting
for the new frame alignment, this frame position is the expected frame position. If the new Frame Alignment is found, causing a
transition to the IF state, and this new frame has a different frame position than expected, the framer will lock to the new frame,
causing a change in the position of the frame. Whenever the framer changes its frame position, it causes an Incoming Alignment Error
(OTU-IAE) alarm to be raised in register \OTU_STS\ and a Backward Incoming Alignment Error (BIAE) to be sent upstream (G798/8.10).

If the frame alignment process is in the OOF state, the bit OTU_OOF is set high in register \OTU_STS\. This bit is not set low until
\OTU_STS\ has been read by the microprocessor. A 10-bit counter is provided to accumulate the count of OOF events (a OOF event is a
change from state IF to OOF). This counter is accessible via  register \OTU_OOF_CNT\.

The count of received frames is also accumulated in a 12-bit counter, available via register \OTU_FRAME_CNT\.

OTU-OOF is set to false during OCh-LOS and OTU-AIS.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Frame Alignment Supervision (OTU-LOF generation) +++[OTU_LOF]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.5.1)

OTU Loss of Frame (OTU-LOF) defect is generated based on the state of the frame alignment process described above.
If the frame alignment process is in the out-of-frame (OOF) state for 3 ms, a OTU-LOF is declared.
To provide for the case of intermittent OOFs, the integrating timer is not reset to zero until an in-frame (IF) condition persists
continuously for 3 ms. OTU-LOF is cleared when the IF state persists continuously for 3 ms. During OTU-LOF, the bit OTU_LOF is set high
in register \OTU_STS\. This bit is not cleared until \OTU_STS\ has been read by the microprocessor.

OTU-LOF is set to false during OCh-LOS and OTU-AIS.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Multiframe Alignment Process +++[OTU_OOM]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/8.2.2)

The OTU multiframe alignment is found based on the MFAS byte contained in the OTU frame. The process has two states,
out-of-multiframe (OOM) and in-multiframe (IM). In the IM state, OOM is assumed when the received MFAS does not match with the expected
multiframe number in 5 consecutive OTU frames. In the OOM state, multiframe alignment is assumed to be recovered, the multiframe counter
is set to the new MFAS, and the IM state is entered, when a valid MFAS sequence is found in two consecutive OTU frames.
The MFAS sequence is valid if the MFAS of the second frame is the increment of the MFAS of the first frame. The multiframe start is
maintained during the OOM state.

If the multiframe alignment process is in the OOM state, the bit OTU_OOM is set high in register \OTU_STS\. This bit is not set low
until \OTU_STS\ has been read by the microprocessor.

OTU-OOM is set to false during OCh-LOS, OTU-AIS and OTU-LOF.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Multiframe Alignment Supervision (LOM generation) +++[OTU_LOM]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.5.2)

If the multiframe alignment process is persistently in the out-of-multiframe (OOM) state for 3 ms, OTU-LOM is declared.
OTU-LOM is cleared immediately when the multiframe alignment process is in the in-multiframe (IM) state. During OTU-LOM, the bit
OTU_LOM is set high in register \OTU_STS\. This bit is not cleared until \OTU_STS\ has been read by the microprocessor.

OTU-LOM is set to false during OCh-LOS, OTU-AIS and OTU-LOF.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU Rx Server Signal Fail (SSF) Monitor +++[OTU_SSF]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

A Server Signal Fail alarm (OTU-SSF) is activated if a Loss of Signal (OCh-LOS) or a Loss of Frame (OTU-LOF) or a Loss of Multiframe
(OTU-LOM) or a Alarm Indication Signal (OTU-AIS) alarm is active. The OTU-SSF is an output of the OCh to OTU dataptation sink function
(G.798/12.3.1.3).

```
OTU-SSF <- OCh-LOS or OTU-LOF or OTU-LOM or OTU-AIS
```

During OTU-SSF the Section Monitoring overhead (SMOH) is not processed and all SM alarms are set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU SM Trail Trace Identifier (TTI) Monitoring +++[SM_TIM]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.2)

The OTU-TTI monitoring process reports the trace identifier mismatch defect (SM-TIM). The process is based on the comparison of
expected APIs (//i.e//., SAPI and DAPI) with the APIs in the incoming signal. The APIs are part of the 64 byte TTI as defined in ITU-T
G.709. The comparison result is "match" if all 16 bytes are equal, and "mismatch" if one or more bytes are unequal. A persistence check
is used in order to prevent wrong/toggling TIM information during bit errors (According to G.798 appendix IV.2).

  [figures/tti_format.png]  

Depending on the value of bits TTI_SAPI_EVAL and TTI_DAPI_EVAL of register \OTU_CFG\, only the SAPI, only the DAPI or both SAPI
and DAPI are taken into account for the mismatch detection. The operator specific field is not take into account.


    || OTU_CFG[TTI_SAPI_EVAL] | OTU_CFG[TTI_DAPI_EVAL] |  SM-TIM behaviour                                                      |
     |         0              |          0             | SM-TIM generation is disabled                                          |
     |         0              |          1             | Only the DAPI field is take into account for SM-TIM generation         |
     |         1              |          0             | Only the SAPI field is take into account for SM-TIM generation         |
     |         1              |          1             | Both DAPI and SAPI fields are take into account for SM-TIM generation  |


SM-TIM status is accessible via register \OTU_STS\. The recevied TTI string is accessible through the TTI Access registers
(see section [TTI Access #TTI_ACCESS]\ of this document). In order to avoid a wrong string to be reported during bit errors, the APIs
must be present for three consecutive multiframes before being accepted. This is the persistence process described in G.789 appendix
IV.2. The persistence process runs independently for SAPI, DAPI and Operator Specific fields.

An unstable condition in the persistence process is reported in register \OTU_STS\ as SM-TIU (Trail Trace identifier unstable).

During signal fail conditions ([OTU-SSF #OTU_SSF]), SM-TIM is set to false.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU Rx Trail Signal Fail (TSF) Monitor +++[OTU_TSF]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

A OTU Trail Signal Fail alarm (OTU-TSF) is activated if a [OTU-SSF #OTU_SSF] or a SM-TIM alarm is active.

```
OTU-TSF <- OTU-SSF or SM-TIM
```

During OTU-TSF, the ODU data is replaced by a all-ones (ODU-AIS).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU SM BIP-8 Error Monitoring +++[SM_BIP]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The incommig OTU SM BIP-8 is monitored and the block errors are accumulated in a 15-bit counter accessible via register \SM_BIP_CNT\.
When an error occurs, the bit SM_BIP is set in register \OTU_STS\. This bit is automatically reset when register is read.

The OTU SM BIP-8 error count is used by the microprocessor in order to generate the SM-DEG alarm.

Note: No errored blocks are counted during signal fail condition ([OTU-TSF #OTU_TSF]).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU SM Backward Error Indication (BEI) Monitoring +++[SM_BEI]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The incommig Backward Error Indications (BEI) are accumulated in a 15-bit counter accessible via register \SM_BEI_CNT\. When
an error occurs, the bit SM_BEI is set in register \OTU_STS\. This bit is automatically reset when register is read.

Note: No errors are counted during signal fail condition ([OTU-TSF #OTU_TSF]).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU SM Backward Incoming Alignment Error (BIAE) Detection +++[SM_BIAE]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.11.1)

SM-BIAE is declared if the BEI/BIAE bits in the SM overhead field (byte 3, bits 1 to 4) are "1011" for 3 consecutive frames.
BIAE is cleared if the BEI/BIAE bits in the SM overhead field are not equal to "1011" for 3 consecutive frames.
SM-BIAE status is accessible via register \OTU_STS\.

During signal fail condition ([OTU-TSF #OTU_TSF]), SM-BIAE is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU SM Backward Defect Indication (BDI) Monitoring +++[SM_BDI]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.6.1)

SM-BDI is declared if the BDI bit in the SM overhead field (byte 3, bit 5) is "1" for 5 consecutive frames. SM-BDI is cleared if the
BDI bit in the SM overhead field is "0" for 5 consecutive frames. SM-BDI status is available through register \OTU_STS\.

During signal fail condition ([OTU-TSF #OTU_TSF]), SM-BDI is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU SM Incoming Alignment Error (IAE) Monitoring +++[SM_IAE]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.10.1)

SM-IAE is declared if the IAE bit in the SM overhead field (byte 3, bit 6) is "1" for 5 consecutive frames. SM-IAE is cleared if
the IAE bit in the SM overhead field is "0" for 5 consecutive frames. The SM-IAE status is available through register \OTU_STS\.

During signal fail condition ([OTU-TSF #OTU_TSF]), SM-IAE is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OTU Forward Error Correction (FEC) Processing +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The FEC processing function extracts the RS(255,239) FEC data from the OTU FEC area and performs error correction as defined in
Annex A of ITU-T G.709. The number of corrected bits are reported via registers \FEC_CORRERR_CNT_HI\ and \FEC_CORRERR_CNT_LO\.
No corrected bits are counted during signal fail conditions ([OTU-SSF #OTU_SSF]).

An additional counter is used to accumulate the number of sub-rows containing uncorrectable errors. This counter is accessible
through register \FEC_UNCORR_CNT\.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ ODU Receive Processing ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The ODU receive processing includes the following functions:

 + ODU PM trail termination sink function (G.798/14.2.1.2)
 + ODU TCM trail termination sink function (G.798/14.5.1.1.2 and 14.5.1.1.3)
 +

The ODU PM trail termination sink function reports the state of the ODU trail (path). It computes the BIP8, extracts path monitoring
overhead (PMOH) – including the TTI, BIP8, BDI, BEI and STAT signals – in the PM overhead field from the ODU signal,
detects for AIS, OCI, LCK, TIM, DEG and BDI defects and forwards the error and defect information as backward indications to the
ODU PM trail termination source.

The ODU TCM trail termination sink function reports the state of the ODU monitored tandem connection. It computes the BIP8, extracts
tandem connection monitoring overhead (TCMOH) – including the TTI, BIP8, BDI and BEI signals – in all TCMOH fields from the ODU
signal, detects for AIS, OCI, LCK, TIM, DEG and BDI defects.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ ODU Path Monitoring +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU PM Trail Trace Identifier (TTI) Monitoring ++++[PM_TIM]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.2)

The ODU PM TTI monitoring process reports the trace identifier mismatch defect (PM-TIM). The process is based on the comparison of
expected APIs (//i.e.//, SAPI and DAPI) with the APIs in the incoming signal. The APIs are part of the 64 byte TTI as defined in ITU-T
G.709. The comparison result is "match" if all 16 bytes are equal, and "mismatch" if one or more bytes are unequal. A persistence check
is used in order to prevent wrong/toggling TIM information during bit errors (According to G.798 appendix IV.2).

  [figures/tti_format.png]  

Depending on the value of bits TTI_SAPI_EVAL and TTI_DAPI_EVAL of register \ODU_PM_CFG\, only the SAPI, only the DAPI or both SAPI
and DAPI are taken into account for the mismatch detection. The operator specific field is not take into account.


    || ODU_PM_CFG[TTI_SAPI_EVAL] | ODU_PM_CFG[TTI_DAPI_EVAL] |  PM-TIM behaviour                                                      |
     |         0                 |          0                | PM-TIM generation is disabled                                          |
     |         0                 |          1                | Only the DAPI field is take into account for PM-TIM generation         |
     |         1                 |          0                | Only the SAPI field is take into account for PM-TIM generation         |
     |         1                 |          1                | Both DAPI and SAPI fields are take into account for PM-TIM generation  |


PM-TIM status is accessible via register \ODU_PM_STS\. The recevied TTI string is accessible through the TTI Access registers
(see section [TTI Access #TTI_ACCESS] of this document). In order to avoid a wrong string to be reported during bit errors, the APIs
must be present for three consecutive multiframes before being accepted. This is the persistence process described in in G.789 appendix
IV.2. The persistence process runs independently for SAPI, DAPI and Operator Specific fields. An unstable condition in the persistence
process is reported in register \ODU_PM_STS\ as PM-TIU (Trail Trace identifier unstable).

During signal fail conditions ([OTU-TSF #OTU_TSF]), PM-TIM is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU Alarm Indication Signal (ODU-AIS) Detection ++++[ODU_AIS]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.3.2)

ODU-AIS is declared if the received STAT information is "111" for 3 consecutive frames. ODU-AIS is cleared if the received STAT
information is not equal to "111" for 3 consecutive frames.

The ODU-AIS status is accessible via register \ODU_PM_STS\.

On declaration of ODU-AIS an all-ONEs pattern is output within 2 frames. On clearing of ODU-AIS the all-ONEs pattern is removed
within 2 frames, with normal data being output downstream.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU Open Connection Indication defect (ODU-OCI) Detection ++++[ODU_OCI]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.8.2)

ODU-OCI is declared if the received STAT information is "110" for 3 consecutive frames. ODU-OCI is cleared if the received STAT
information is not equal to "110" for 3 consecutive frames.

The ODU-OCI status is accessible via register \ODU_PM_STS\.
During signal fail conditions ([OTU-TSF #OTU_TSF]), ODU-OCI is set to false.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU Locked Defect (ODU-LCK) Detection ++++[ODU_LCK]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.9.1)

ODU-LCK is declared if the received STAT information is "101" for 3 consecutive frames. ODU-LCK is cleared if the received STAT
information is not equal to "101" for 3 consecutive frames.

The ODU-LCK status is accessible via register \ODU_PM_STS\.
During signal fail conditions of the data signal ([OTU-TSF #OTU_TSF]), ODU-LCK is set to false.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ ODU Trail Signal Fail (TSF) Monitor +++[ODU_TSF]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

A ODU Trail Signal Fail alarm (ODU-TSF) is activated if a [OTU-TSF #OTU_SSF] or a [PM-TIM #PM_TIM] or a ODU-LCK or a ODU-OCI or a
ODU-AIS alarm is active.

```
ODU-TSF <- OTU-TSF or PM-TIM or ODU-LCK or ODU-OCI or ODU-AIS
```

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU PM BIP-8 Error Monitoring ++++[PM_BIP]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The incommig ODU BIP-8 is monitored and the errors are accumulated in a 15-bit counter accessible via register \PM_BIP_CNT\. When
an error occurs, the bit PM_BIP is set in register \ODU_PM_STS\. This bit is automatically reset when register is read.

Note: No errored blocks are counted during signal fail conditions ([OTU-TSF #OTU_TSF]).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU PM Backward Error Indication (BEI) Monitoring ++++[PM_BEI]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The incommig Backward Error Indications (BEI) are accumulated in a 15-bit counter accessible via register \PM_BEI_CNT\. When
an error occurs, the bit PM_BEI is set in register \ODU_PM_STS\. This bit is automatically reset when register is read.

Note: No errors are counted a signal fail conditions ([OTU-TSF #OTU_TSF]).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU PM Backward Incoming Alignment Error (BIAE) Detection ++++[PM_BIAE]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.11.1)

PM-BIAE is declared if the BEI/BIAE bits in the PM overhead field (byte 3, bits 1 to 4) are "1011" for 3 consecutive frames.
PM-BIAE is cleared if the BEI/BIAE bits in the PM overhead field are not equal to "1011" for 3 consecutive frames. PM-BIAE status
is accessible via register \ODU_PM_STS\.

During signal fail conditions ([OTU-TSF #OTU_TSF]), PM-BIAE is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU PM Backward Defect Indication (BDI) Monitoring ++++[PM_BDI]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.6.1)

PM-BDI is declared if the BDI bit in the PM overhead field (byte 3, bit 5) is "1" for 5 consecutive frames. PM-BDI is cleared if the
PM-BDI bit in the PM overhead field is "0" for 5 consecutive frames. PM-BDI status is available through register \ODU_PM_STS\.

During signal fail conditions ([OTU-TSF #OTU_TSF]), PM-BDI is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU PM Incoming Alignment Error (IAE) Monitoring ++++[PM_IAE]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.10.2)

PM-IAE is declared if the STAT bits in the PM overhead are equal to "010" for 3 consecutive frames. PM-IAE is cleared if the STAT
bits in the PM overhead are not equal to "010" for 3 consecutive frames process. PM-IAE status is accessible through register
\ODU_PM_STS\

During signal fail conditions ([OTU-TSF #OTU_TSF]), PM-IAE is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ ODU Tandem Connection Monitoring +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM Alarm Indication Signal (AIS) Detection ++++[TCM_AIS]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.3.2)

TCM-AIS is declared if the received STAT information is "111" for 3 consecutive frames. TCM-AIS is cleared if the received STAT
information is not equal to "111" for 3 consecutive frames.

The TCM-AIS status is accessible via register \ODU_TCM_STS\.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM Open Connection Indication defect (OCI) Detection ++++[TCM_OCI]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.8.2)

The purpose of monitoring OCI is to qualify a downstream loss of signal defect by indicating that the loss of signal defect is due
to an output connection point not connected to an input connection point.

TCM-OCI is declared if the received STAT information is "110" for 3 consecutive frames. TCM-OCI is cleared if the received STAT
information is not equal to "110" for 3 consecutive frames.

The TCM-OCI status is accessible via register \ODU_TCM_STS\.
During signal fail conditions ([OTU-TSF #OTU_TSF]), TCM-OCI is set to false.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM Locked Defect (LCK) Detection ++++[TCM_LCK]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.9.1)

TCM-LCK is declared if the received STAT information is "101" for 3 consecutive frames. TCM-LCK is cleared if the received STAT
information is not equal to "101" for 3 consecutive frames.

The TCM-LCK status is accessible via register \ODU_TCM_STS\.
During signal fail conditions of the data signal ([OTU-TSF #OTU_TSF]), TCM-LCK is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU Loss of Tandem Connection (LTC) Detection ++++[TCM_LTC]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(Pending)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM Trail Trace Identifier (TTI) Monitoring ++++[TCM_TIM]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.2)

The ODU TCM TTI monitoring process reports the trace identifier mismatch defect (TCM-TIM). The process is based on the comparison of
expected APIs (//i.e.//, SAPI and DAPI) with the APIs in the incoming signal. The APIs are part of the 64 byte TTI as defined in ITU-T
G.709. The comparison result is "match" if all 16 bytes are equal, and "mismatch" if one or more bytes are unequal. A persistence check
is used in order to prevent wrong/toggling TIM information during bit errors (According to G.798 appendix IV.2).

  [figures/tti_format.png]  

Depending on the value of bits TTI_SAPI_EVAL and TTI_DAPI_EVAL of register \ODU_TCM_CFG\, only the SAPI, only the DAPI or both SAPI
and DAPI are taken into account for the mismatch detection. The operator specific field is not take into account.


    || ODU_TCM_CFG[TTI_SAPI_EVAL] | ODU_TCM_CFG[TTI_DAPI_EVAL] |  TCM-TIM behaviour                                                      |
     |         0                  |          0                 | TCM-TIM generation is disabled                                          |
     |         0                  |          1                 | Only the DAPI field is take into account for TCM-TIM generation         |
     |         1                  |          0                 | Only the SAPI field is take into account for TCM-TIM generation         |
     |         1                  |          1                 | Both DAPI and SAPI fields are take into account for TCM-TIM generation  |


TCM-TIM status is accessible via register \ODU_TCM_STS\. The recevied TTI string is accessible through the TTI Access registers
(see section [TTI Access #TTI_ACCESS] of this document). In order to avoid a wrong string to be reported during bit errors, the APIs
must be present for three consecutive multiframes before being accepted. This is the persistence process described in in G.789 appendix
IV.2. The persistence process runs independently for SAPI, DAPI and Operator Specific fields.

An unstable condition in the persistence process is reported in register \ODU_TCM_STS\ as TCM-TIU (Trail Trace identifier unstable).

During signal fail conditions ([OTU-TSF #OTU_TSF], TCM-AIS, TCM-LCK and TCM-OCI), TCM-TIM is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM BIP-8 Error Monitoring ++++[TCM_BIP]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The incommig ODU TCM BIP-8 is monitored and the errors are accumulated in a 15-bit counter accessible via register \TCM_BIP_CNT\. When
an error occurs, the bit TCM_BIP is set in register \ODU_TCM_STS\. This bit is automatically reset when register is read.

Note: No errored blocks are counted during [OTU-TSF #OTU_TSF] and TCM-AIS.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM Backward Error Indication (BEI) Monitoring ++++[TCM_BEI]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The incommig Backward Error Indications (BEI) are accumulated in a 15-bit counter accessible via register \TCM_BEI_CNT\. When
an error occurs, the bit TCM_BEI is set in register \ODU_TCM_STS\. This bit is automatically reset when register is read.

Note: No errors are counted during [OTU-TSF #OTU_TSF], TCM-TIM, TCM-AIS, TCM-LCK and TCM-OCI.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM Backward Incoming Alignment Error (BIAE) Detection ++++[TCM_BIAE]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.11.1)

TCM-BIAE is declared if the BEI/BIAE bits in the TCM overhead field (byte 3, bits 1 to 4) are "1011" for 3 consecutive frames.
TCM-BIAE is cleared if the BEI/BIAE bits in the TCM overhead field are not equal to "1011" for 3 consecutive frames. TCM-BIAE status
is accessible via register \ODU_TCM_STS\.

During signal fail conditions ([OTU-TSF #OTU_TSF], TCM-TIM, TCM-AIS, TCM-LCK and TCM-OCI), TCM-BIAE is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM Backward Defect Indication (BDI) Monitoring ++++[TCM_BDI]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.6.1)

TCM-BDI is declared if the BDI bit in the TCM overhead field (byte 3, bit 5) is "1" for 5 consecutive frames. TCM-BDI is cleared if the
TCM-BDI bit in the TCM overhead field is "0" for 5 consecutive frames. TCM-BDI status is available through register \ODU_TCM_STS\.

During signal fail conditions ([OTU-TSF #OTU_TSF], TCM-TIM, TCM-AIS, TCM-LCK and TCM-OCI), TCM-BDI is set to false.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++++ ODU TCM Incoming Alignment Error (IAE) Monitoring ++++[TCM_IAE]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.10.2)

TCM-IAE is declared if the STAT bits in the TCM overhead are equal to "010" for 3 consecutive frames. TCM-IAE is cleared if the STAT
bits in the TCM overhead are not equal to "010" for 3 consecutive frames process. TCM-IAE status is accessible through register
\ODU_TCM_STS\

During signal fail conditions ([OTU-TSF #OTU_TSF], TCM-TIM, TCM-AIS, TCM-LCK and TCM-OCI), TCM-IAE is set to false.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ FTFL Message Acess +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.709/15.8.2.5)

The received fault type and fault location (FTFL) message is stored into a 256-byte memory, which is accessible via the FTFL Access
registers (see section [FTFL Access #FTFL_ACCESS] of this document). The TFFL byte is located in row 2, column 14 of the ODU overhead.
The 256-byte FTFL message is aligned with the ODU multiframe (//i.e.//, byte 0 of the 256-byte FTFL is present at ODU multiframe
position 0, byte 1 of the 256-byte FTFL is present at ODU multiframe position 1, byte 2 of the 256-byte FTFL is present at ODU
multiframe position 2, etc.). The 256-byte FTFL message consists of two 128-byte fields: the forward and backward fields. The forward
field is allocated to bytes 0 through 127 of the FTFL message. The backward field is allocated to bytes 128 through 255 of the FTFL
message.

Note: ODU-AIS does not replace the FTFL field with the all ones pattern. This means that FTFL is valid during ODU-AIS (obviously, FTFL
is not valid if the ODU-AIS is due to an [OTU-TSF #OTU_TSF].


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ APS/PCC Monitoring +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(Pending)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ OPU Receive Processing ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/14.3.1.3)

The OPU receive process performs the ODU path to CBR adaptation sink function (G.798/14.3.1.3). This function recovers the constant
bit rate client signal from the OPU payload using the justification control information (JC overhead) to determine if a data or stuff
byte is present within the NJO and PJO bytes. It extracts the OPU overhead and monitors the reception of the correct
payload type. Under signal fail condition, the client data is replaced by a PN-11 sequence (generic AIS).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OPU Payload Mismatch (PLM) Supervision +++[OPU_PLM]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.4.1)

OPU-PLM is declared if the received OPU payload type is not equal to the expected payload type(s) for 3 consecutive multiframes.
OPU-PLM is cleared if the received payload type is equal to the expected payload type(s) for 3 consecutive multiframes. OPU-PLM status
is accessible via register \OPU_STS\. Up to two expected payload types can be configured in register \OPU_EXP_PT\. If only one
payload type is accepted, then both \OPU_EXP_PT\[EXP_PT_1] and \OPU_EXP_PT\[EXP_PT_2] fields must be set to the same value.

During server (ODU) signal fail condition (\ODU_TSF\), OPU-PLM is set to false.

The received Payload Type (PT) is accessible via register \OPU_RX_PT\. This register is updated when a new PT is received for 3
consecutive multiframes.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OPU Multiplex Structure Identifier Mismatch (MSIM) Supervision +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  (Pending)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Client Data Extraction +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/14.3.1.3)

The constant bit rate (CBR) client data is extracted from the OPU payload using the justification control information (JC overhead) to
determine if a data or stuff byte is present within the NJO and PJO bytes.

Two counters are provided to accumulate the count of positive and negative justification events. The positive justification counter
is accessible via register \RX_PJUST_CNT\. The negative justification counter is accessible via register \RX_NJUST_CNT\.

During server (ODU) signal fail condition (\ODU_TSF\) or OPU-PLM, a generic AIS (PN-11) pattern is output to the client within 2
frames. On clearing of the signal fail condition the generic AIS pattern is removed within 2 frames with normal data being output.
The generic AIS pattern is defined in clause 16.6 of G.709.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Client AIS Monitoring +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/6.2.6.3.3)

For Client AIS detection, the reverse PN-11 process is applied to the entire OPU payload. At the output of this process an all-ZEROs
pattern will occur if the input data is the PN-11 generic AIS sequence. Both the output and input signals are constantly checked over
an 8192-bit interval for the number of none ZERO bits (= ONE bits). If the number of ONE bits per interval at the output is less than
256 and the number of ONE bits per interval at the input is above or equal to 256 in 3 consecutive intervals, CBR-AIS is raised.
If the number of ONE bits at the output is above or equal to 256 or the number of ONE bits at the input is below 256 in 3 consecutive
intervals, CBR-AIS is cleared. The reverse PN-11 process is described in G.798/6.2.6.3.3.

The CBR-AIS status is available through register \OPU_STS\.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OPU PRBS Monitoring +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.709/17.4.2)

Recommendation G.709 defines the mapping of a PRBS test signal into OPU. At the receiver side, the OTN frame performs the TSE check.
The Test sequence errors (TSEs) are bit errors in the PRBS data stream extracted from the OPU payload area and are detected whenever
the PRBS detector is in lock and the received data bit does not match the expected value.

A counter is provided to accumulate the count of TSEs. This counter is accessible via register OPU_TSE_CNT. When a TSE occurs, the bit
OPU_TSE is set in register \OPU_STS\. If the detector goes out of lock, the bit OPU_LSS (Loss of Sequence Synchronization) is set in
register \OPU_STS\. Both OPU_TSE and OPU_LSS are automatically cleared when \OPU_STS\ is read.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+ Transmit Processing +
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ OTU Layer Transmit Processing ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The OTU transmit processing includes the following functions

 + OCh to OTU adaptation source function with FEC (G.798/12.3.1.1)
 + OTU trail termination source function (G.798/13.2.1.1)
 + OTU to ODU adaptation source function (G.798/13.3.1.1)
 +

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ FAS and MFAS Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The OA1, OA2 FAS bytes and the MFAS byte are inserted in the OTU frame according to described in G.709.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ SMOH-TTI Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The trail trace identifier is inserted in the TTI byte position of the SM field. The transmitted TTI is provided by the microprocessor
via the [TTI Access Registers #TTI_ACCESS]. The trail trace format is described in clause 15.2 of G.709.

The 64-byte TTI signal is aligned with the OTU multiframe and transmitted four times per multiframe. Byte 0 of the 64-byte TTI signal
is present at OTU multiframe positions 0x00, 0x40, 0x80 and 0xC0.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ SMOH-BDI Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The backward defect indication is inserted in the BDI bit position of the SM field. Upon the declaration/clearing of
[OTU-SSF #OTU_SSF] or SM-TIM at the receive side, the transmitter inserts/removes the BDI indication within 50 ms.

SMOH-BDI <- [OTU-SSF #OTU_SSF] or SM-TIM

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ SMOH-BEI/BIAE Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.709/15.7.2.1.4)
(G.798/13.2.1.1)

If a OTU frame slip occurrs at the receive side, the value "1011" is inserted into the BEI/BIAE bits of the SM field.
If SM-IAE is false, the the BEI/BIAE bits of the SM field contain the count of interleaved-bit blocks that have been detected in
at the receive side (SM-BIP). Upon the detection of incoming alignment error or a number of errors at the receiver, the transmitter
inserts the value in the BEI/BIAE bits within 50 ms.

SMOH-BIAE <- SM-IAE


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ SMOH-BIP8 Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.709/15.7.2.1.2)

The OTU SM BIP-8 is computed over the bits in the OPU (columns 15 to 3824) area of OTU frame i, and inserted in the OTU SM BIP-8
overhead location in OTU frame i+2:

  [figures/otu_bip.jpg]  
  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ SMOH-IAE Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/13.2.2.1)

If a frame synchronous mapping for the ODU client data is used, the incoming alignment error information is inserted into the IAE field
of the SMOH. Upon the declaration of the alignment error, the IAE indication is inserted for the next 16 multiframes. Each new
declaration of IAE restarts the 16 multiframe insertion time.

| **Note:** frame synchronous mapping for the ODU client data is currently unsupported. SMOH-IAE is allways set to zero |


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ ODU Layer Transmit Processing ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The ODU transmit processing includes the following functions:

 + ODU PM trail termination source function (G.798/14.2.1.1)
 + ODU PM to CBR mapping adaptation source function (G.798/14.3.1.1 and 14.3.1.2)
 + ODU TCM trail termination source function (G.798/14.5.1.1.1)
 +

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ PMOH-TTI Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The trail trace identifier is inserted in the TTI byte position of the PM field. The transmitted TTI is provided by the microprocessor
via the [TTI Access Registers #TTI_ACCESS]. The trail trace format is described in clause 15.2 of G.709.

The 64-byte TTI signal is aligned with the OTU multiframe and transmitted four times per multiframe. Byte 0 of the 64-byte TTI signal
is present at OTU multiframe positions 0x00, 0x40, 0x80 and 0xC0.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ PMOH-BDI Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The backward defect indication is inserted in the BDI bit position of the PM field. Upon the declaration/clearing of
[OTU-TSF #OTU_TSF] or [PM-TIM PM_TIM] at the receive side, the transmitter inserts/removes the BDI indication within 50 ms.

```
PMOH-BDI <- OTU-TSF or PM-TIM
```

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ PMOH-BEI Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.798/14.2.1.1)

BEI bits of the PM field contain the count of interleaved-bit blocks that have been detected in at the receive side (PM-BIP).
Upon the detection of incoming alignment error or a number of errors at the receiver, the transmitter inserts the value in the BEI
bits within 50 ms.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ PMOH-BIP8 Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.709/15.8.2.1.2)

The ODU PM BIP-8 is computed over the bits in the OPU (columns 15 to 3824) area of ODU frame i, and inserted in the ODU PM BIP-8
overhead location in the ODU frame i+2, as shown in picture below:

  [figures/odu_bip.jpg]  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ PMOH-STAT Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The transmitted PMOH STAT field is force to value 001 - Normal path signal (Table 15-3/G.709).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ ODU LCK Maintenance Signal Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The LCK maintenance signal is generated on operator request in order to lock the signal from user access while the operator is, for
example, performing set-up tests. In this case, the ODU signal is replaced by fixed pattern "0101 0101" indicated as locked (LCK).
The LCK insertion is configured via the ODU_SRC_SIGNAL field of register \ODU_PM_CFG\.

  [figures/odu_lck.jpg]  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ ODU OCI Maintenance Signal Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

OCI in OTN is equivalent to Unequipped in SDH. During OCI insertion, the entire ODU signal is replaced by fixed pattern "0110 0110".
The OCI insertion is configured via the ODU_SRC_SIGNAL field of register \ODU_PM_CFG\.

  [figures/odu_oci.jpg]  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ ODU AIS Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

When field ODU_SRC_SIGNAL of register \ODU_PM_CFG\ is set to 'Force AIS', the ODU signal is replaced by a All Ones pattern, excluding only
the FTFL field. This register is suposed to be used only for test purposes.

  [figures/odu_ais.jpg]  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ OPU Layer Transmit Processing ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Client Data Mapping and Justification Control +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The client data is read out of the buffer and mapped into the OPU payload. The justification control (JC) bits are generated based on
the justification decision performed in the current frame according to the specification in clause 17.1 of G.709.
If the client data mapping into the OPU is performed according to bit synchronous mode, neither negative nor positive justification
will occur, //i.e.//, no data will be written onto the NJO byte and data will always be written onto the PJO byte (G.798/14.3.1.2). The
mapping mode is configured via register \OPU_CFG\.

Two counters are provided to accumulate the count of positive and negative justification events. The positive justification counter
is accessible via register \TX_PJUST_CNT\. The negative justification counter is accessible via register \TX_NJUST_CNT\.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Payload Type (PT) Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The OTU payload type (PT) is inserted into the PT byte position of the PSI overhead as defined in clause 15.9.2.1 of G.709.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ OPU PRBS Insertion +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(G.709/17.4.2)

For test purposes a 2 147 483 647-bit pseudo-random test sequence (2^31 - 1) as specified in 5.8/O.150 can be mapped into the OPU
payload. Groups of 8 successive bits of the 2 147 483 647-bit pseudo-random test sequence signal are mapped into each byte of the ODU
payload.

The PRBS insertion is enabled via register \OPU_CFG\. When the PRBS is enabled, the microprocessor must set the transmitted payload
type to 0xFE - "PRBS test signal mapping", according to Table 15-8/G.709.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+ Microprocessor Interface +
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ Signals ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The OTN frames interfaces to the micprocessor through the interface depicted below. The bus data width is equal to 16 and the address
width is 8. 

  [figures/upc_interface.png]  
  
All the configuration and status informations are presented to the microprocessor as a set of memory-mapped registers. Section
[Register Description #REGISTER_DESCRIPTION] of this document describes the behaviour of all of these registers.
  
The write access timing is show below. Only one clock cycle is required to perform write operations.

  [figures/upc_wr_access.png]  
  
The read access takes 8 clock periods. The signal //rd_en// is a 1-clock pulse that signalizes the end of the read operation. This
pulse is by RC and RLC registers (see [Register Types #REGISTER_TYPES]) for clearing their latches.
  
  [figures/upc_rd_access.png]    

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ Conventions ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Bit numbering conventions +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 - Bytes and words are defined with bit 7 or 15 as the MSB and bit 0 as the LSB
 -

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Status register conventions +++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 - All alarm conditions are represented as a logic high level in the corresponding status register. If a value 0 is read from a status
    register, this must be interpreted as "no alarms".
 - All the event and error counters are suposed to be read in 10ms intervals. If the read interval is greater than 10ms, an overflow
   can occurr. In the case of an overflow, the couters will saturate to all-ones.
 -

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+++ Register Types +++[REGISTER_TYPES]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Five different behaviors are allowed for the microprocessor interfacing registers. They are listed in table below.

 || Abbreviation  |  Register Type              |
  |   RO          | Read only                   |
  |   RW          | Read/Write                  |
  |   WO          | Write only                  |
  |   RC          | Read and clear              |
  |   RLC         | Read, latch and clear       |

The read only (RO), write only (WO) and read/write (RW) register types are self-explained and do not need further descritpion.

Read and clear (RC) registers are a special type of read only (RO) registers, where the read operation causes a latch to be cleared.
This kind of behaviour is usually required for alarm status registers. Some alarm events can have a short duration time (//i.e.//, a
few milliseconds or even microseconds) while the microprocessor real-time task usually runs once each 10 milliseconds. In order to
prevent an alarm event from being lost, a latch is used to keep the alarm indication active until it has been read by the
microprocessor. When a RC register is read, the following operations are performed:

 + The latched status value is read by the microprocessor
 + The latch is cleared
 +

Read, latch and clear (RLC) registers are used for reading counter values. The counters are usually synchronous to the data processing
clock, which is not necessarily synchronous to the microprocessor interface clock. This can lead to erroneous reading if the counter
increments during the microprocessor read access. In order to avoid this error, the counter value is saved to a temporary latch before
being read by the microprocessor. This latch is guaranteed to be static during the entire read cycle time.

A latch enable is required in order to allow the counter to be saved to the temporary latch. In RLC registers, this enable is
automatically generated at the end of the microprocessor read cycle. When a RLC register is read, the following operations are
performed:

 + The latched counter value is read by the microprocessor
 + The current counter value is latched for the next read cycle
 + Counter is cleared
 +

For counters that occupy more than one memory address (i.e. counters that are larger than 16 bits), both latching and clearing are
performed by reading the least significant register. In other words, this means that the least significant register must be read last.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+ Register Description +[REGISTER_DESCRIPTION]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ Register Map ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 ||  Register Name        |  Description                                          |  Offset                   |
  | \OTU_STS_PTR\         | OTU status pointer                                    | OTU_STS_PTR_OFFSET        |
  | \OTU_STS\             | OTU status                                            | OTU_STS_OFFSET            |
  | \OTU_CFG_PTR\         | OTU configuration pointer                             | OTU_CFG_PTR_OFFSET        |
  | \OTU_CFG\             | OTU configuration                                     | OTU_CFG_OFFSET            |
  | \SM_BEI_CNT\          | OTU BEI counter                                       | SM_BEI_CNT_OFFSET         |
  | \SM_BIP_CNT\          | OTU BIP error counter                                 | SM_BIP_CNT_OFFSET         |
  | \OTU_OOF_CNT\         | OTU Out of frame envent counter                       | OTU_OOF_CNT_OFFSET        |
  | \OTU_FRAME_CNT\       | OTU Received frames counter                           | OTU_FRAME_CNT_OFFSET      |
  | \TTI_ACCESS_CTRL\     | TTI access control                                    | TTI_ACCESS_CTRL_OFFSET    |
  | \TTI_DATA\            | TTI read/write data                                   | TTI_DATA_OFFSET           |
  | \FTFL_ACCESS_CTRL\    | FTFL access control                                   | FTFL_ACCESS_CTRL_OFFSET   |
  | \FTFL_DATA\           | FTFL read/write data                                  | FTFL_DATA_OFFSET          |
  | \ODU_PM_STS\          | ODU PM Status                                         | ODU_PM_STS_OFFSET         |
  | \ODU_PM_CFG\          | ODU PM Configuration                                  | ODU_PM_CFG_OFFSET         |
  | \PM_BEI_CNT\          | ODU PM BEI counter                                    | PM_BEI_CNT_OFFSET         |
  | \PM_BIP_CNT\          | ODU PM BIP error counter                              | PM_BIP_CNT_OFFSET         |
  | \OPU_TX_PT\           | ODU Tx payload types                                  | OPU_TX_PT_OFFSET          |
  | \OPU_CFG\             | OPU Configuration                                     | OPU_CFG_OFFSET            |
  | \RX_PJUST_CNT\        | Rx Positive Justification Counter                     | RX_PJUST_CNT_OFFSET       |
  | \RX_NJUST_CNT\        | Rx Negative Justification Counter                     | RX_NJUST_CNT_OFFSET       |
  | \TX_PJUST_CNT\        | Tx Positive Justification Counter                     | TX_PJUST_CNT_OFFSET       |
  | \TX_NJUST_CNT\        | Tx Negative Justification Counter                     | TX_NJUST_CNT_OFFSET       |
  | \TCM_STS_PTR\         | TCM Status Pointer                                    | TCM_STS_PTR_OFFSET        |
  | \ODU_TCM_STS\         | ODU TCM Status                                        | ODU_TCM_STS_OFFSET        |
  | \TCM_CFG_PTR\         | TCM Configuration Pointer                             | TCM_CFG_PTR_OFFSET        |
  | \ODU_TCM_CFG\         | ODU TCM Configuration                                 | ODU_TCM_CFG_OFFSET        |
  | \TCM_BEI_CNT\         | TCM BEI counter                                       | TCM_BEI_CNT_OFFSET        |
  | \TCM_BIP_CNT\         | TCM BIP error counter                                 | TCM_BIP_CNT_OFFSET        |
  | \FEC_STS_PTR\         | FEC Status pointer                                    | FEC_STS_PTR_OFFSET        |
  | \FEC_CORRERR_CNT_HI\  | FEC Corrected errors counter                          | FEC_CORRERR_CNT_HI_OFFSET |
  | \FEC_CORRERR_CNT_LO\  | FEC Corrected errors counter                          | FEC_CORRERR_CNT_LO_OFFSET |
  | \FEC_UNCORR_CNT\      | FEC Uncorrectable errors counter                      | FEC_UNCORR_CNT_OFFSET     |
  | \OPU_TSE_CNT\         | OPU PRBS TSE Error counter                            | OPU_TSE_CNT_OFFSET        |


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ OTU Layer Registers ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

+++ OTU_STS_PTR - OTU Status Pointer (OTU_STS_PTR_OFFSET) +++[OTU_STS_PTR]

 ||  Bit   |  Name     | Type |  Description                                                                                         |
  | 15..4  |    -      |      | Reserved for future use                                                                              |
  |  3..0  |  STS_PTR  |  RC  | This pointer is used to address a specific OTN framer in cases where multiple instances are present  |

+++ OTU_STS - OTU Status (OTU_STS_OFFSET) +++[OTU_STS]

This registers reports the OTU Layer status. All alarm indications remain latched until the register has been read by the
microprocessor. In cases where multiple OTN framers are instanced, the register \OTU_STS_PTR\ is used to select which instance the
\OTU_STS\ is related to. If only one OTN instance is present, \OTU_STS_PTR\ is ignored.

 ||  Bit   |  Name                | Type |  Description                                                                           |
  | 15..14 |    -                 |      | Reserved for future use                                                                |
  |   13   |  \OCH_LOS\           |  RC  | Loss of signal (this is a latched version of the SFP/XFP RX_LOS pin)                   |
  |   12   |  \OTU_OOF\           |  RC  | This bit is set to indicate that the frame alignment process has entered the OOF state |
  |   11   |  \OTU_LOF\           |  RC  | This bit is set to declare a Loss of Frame defect                                      |
  |   10   |  \OTU_OOM\           |  RC  | This bit is set to indicate that an Out of Multiframe event has occurred               |
  |   9    |  \OTU_LOM\           |  RC  | This bit is set to declare a Loss of Multirame defect                                  |
  |   8    |  \OTU_AIS\           |  RC  | OTU Alarm indication signal defect                                                     |
  |   7    |  [OTU_IAE #OTU_OOF]  |  RC  | OTU Incoming alignment error (Rx frame slip)                                           |
  |   6    |  \SM_BIP\            |  RC  | Indicates that a BIP-8 error has occurred                                              |
  |   5    |  \SM_BEI\            |  RC  | Indicates that a backward error indication has been received                           |
  |   4    |  \SM_IAE\            |  RC  | OTU SM Incoming alignment error defect                                                 |
  |   3    |  \SM_BIAE\           |  RC  | OTU SM Backward incoming alignment error defect                                        |
  |   2    |  \SM_BDI\            |  RC  | OTU SM Backward defect indication defect                                               |
  |   1    |  \SM_TIM\            |  RC  | OTU SM Trail trace identifier mismatch                                                 |
  |   0    |  [SM_TIU #SM_TIM]    |  RC  | OTU SM Trail trace identifier unstable                                                 |


+++ OTU_CFG_PTR - OTU Configuration Pointer (OTU_CFG_PTR_OFFSET) +++[OTU_CFG_PTR]

 ||  Bit   |  Name     | Type |  Description                                                                                         |
  | 15..4  |    -      |      | Reserved for future use                                                                              |
  |  3..0  |  CFG_PTR  |  RC  | This pointer is used to address a specific OTN framer in cases where multiple instances are present  |

+++ OTU_CFG - OTU Configuration (OTU_CFG_OFFSET) +++[OTU_CFG]

This register is used to set the operational configuration of the OTU layer. In cases where multiple OTN framers are instanced, the
register \OTU_CFG_PTR\ is used to select which instance the \OTU_CFG\ is related to. If only one OTN instance is present, \OTU_CFG_PTR\
is ignored.

 ||  Bit   |  Name           | Type |  Description                                                                                |
  | 15..5  |    -            |      | Reserved for future use                                                                     |
  |   4    |  TTI_DAPI_EVAL  |  RW  | Enables evaluation of DAPI field in the section TTI string. When set to '0', a DAPI mismatch will not generate SM-TIM |
  |   3    |  TTI_SAPI_EVAL  |  RW  | Enables evaluation of SAPI field in the section TTI string. When set to '0', a SAPI mismatch will not generate SM-TIM |
  |   2    |  LASER_FOFF     |  RW  | Forces the laser off (disables ALS). This bit has precedence over LASER_FON                 |
  |   1    |  LASER_FON      |  RW  | Forces the laser on (disables ALS)                                                          |
  |   0    |  OPERATION      |  RW  | Enables the physical port operation                                                         |


+++ SM_BEI_CNT - OTU SM BEI Counter (SM_BEI_CNT_OFFSET) +++[SM_BEI_CNT]

 ||  Bit   |  Name       | Type  |   Description                                                      |
  |   15   |    -        |       |  Reserved for future use                                           |
  | 14..0  |  BEI_CNT    |  RLC  |  Section BEI error count                                           |


+++ SM_BIP_CNT - OTU SM BIP-8 Error Counter (SM_BIP_CNT_OFFSET) +++[SM_BIP_CNT]

 ||  Bit   |  Name                | Type  |  Description                                                       |
  |   15   |    -                 |       |  Reserved for future use                                           |
  | 14..0  |  [BIP_CNT  #SM_BIP]  |  RLC  |  Section BIP-8 error count                                         |


+++ OTU_OOF_CNT - OTU Out of Frame Event Counter (OTU_OOF_CNT_OFFSET) +++[OTU_OOF_CNT]
                         
 ||  Bit   |  Name                | Type  |  Description                                                        |
  | 15..10 |    -                 |  RC   |  Reserved for future use                                            |
  | 9..0   |  [OOF_CNT #OTU_OOF]  |  RLC  |  OOF event counter (a OOF event is a change from state IF to OOF)   |


+++ OTU_FRAME_CNT - OTU Received Frames Counter (OTU_FRAME_CNT_OFFSET) +++[OTU_FRAME_CNT]

 ||  Bit   |  Name       | Type  |  Description                                                        |
  | 15..12 |    -        |       |  Reserved for future use                                            |
  | 11..0  |  FRAME_CNT  |  RLC  |  This counter stores the count of Received frames count             |


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ ODU Layer Path Monitoring Registers ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


+++ ODU_PM_STS - ODU Path Monitoring Status (ODU_PM_STS_OFFSET) +++[ODU_PM_STS]

This registers reports the ODU Layer path monitoring (PM) status. All alarm indications remain latched until the register has been read
by the  microprocessor. In cases where multiple OTN framers are instanced, the register \OTU_STS_PTR\ is used to select which instance
the \OTU_PM_STS\ is related to. If only one OTN instance is present, \OTU_STS_PTR\ is ignored.

 ||  Bit   |  Name           | Type |  Description                                                      |
  | 15..8  |                 |      |                                                                   |
  |   7    |  \PM_BIP\       |  RC  | Indicates that a BIP-8 error has occurred                         |
  |   6    |  \PM_BEI\       |  RC  | Indicates that a backward error indication has been received      |
  |   5    |  \PM_BIAE\      |  RC  | ODU PM Incoming alignment error defect                            |
  |   4    |  \ODU_AIS\      |  RC  | ODU Backward incoming alignment error defect                      |
  |   3    |  \ODU_OCI\      |  RC  | ODU PM Trail trace identifier mismatch                            |
  |   2    |  \ODU_LCK\      |  RC  | ODU PM Alarm indication signal defect                             |
  |   1    |  \PM_BDI\       |  RC  | ODU PM Backward defect indication defect                          |
  |   0    |  \PM_TIM\       |  RC  | ODU PM Trail trace identifier mismatch                            |


+++ PM_BEI_CNT - ODU Path BEI Counter (PM_BEI_CNT_OFFSET) +++[PM_BEI_CNT]

 ||  Bit   |  Name               | Type  |  Description                                                       |
  |   15   |    -                |       |  Reserved for future use                                           |
  | 14..0  |  [BEI_CNT #PM_BEI]  |  RLC  |  Path BEI error count                                              |


+++ PM_BIP_CNT - ODU BIP Path Error Counter (PM_BIP_CNT_OFFSET) +++[PM_BIP_CNT]

 ||  Bit   |  Name               | Type  |  Description                                                       |
  |   15   |    -                |       |  Reserved for future use                                           |
  | 14..0  |  [BIP_CNT #PM_BIP]  |  RLC  |  Path BIP-8 error count                                            |


+++ ODU_PM_CFG - ODU PM Configuration (ODU_PM_CFG_OFFSET) +++[ODU_PM_CFG]

This register is used to set ODU Path Monitoring (PM) operational parameters. In cases where multiple OTN framers are instanced, the
register \OTU_CFG_PTR\ is used to select which instance the \ODU_PM_CFG\ is related to. If only one OTN instance is present,
\OTU_CFG_PTR\ is ignored.

 ||  Bit   |   Name          | Type |  Description                                                                                                               |
  |  19..5 |     -           |      | Reserved for future use                                                                                                    |
  |  4..3  |  ODU_SRC_SIGNAL |  RW  | Selects the ODU source signal: {br} 0 - Normal ODU data {br} 1 - Force OCI {br} 2 - Force LCK {br} 3 - Force AIS           |
  |   2    |  OPU_PT_EVAL    |  RW  | Enables evaluation of the received ODU Payload Type (PT). When set to '0', disables [OPU-PLM #OPU_PLM] generation          |
  |   1    |  TTI_DAPI_EVAL  |  RW  | Enables evaluation of DAPI field in the PM TTI string. When set to '0', a DAPI mismatch will not generate [PM-TIM #PM_TIM] |
  |   0    |  TTI_SAPI_EVAL  |  RW  | Enables evaluation of SAPI field in the PM TTI string. When set to '0', a SAPI mismatch will not generate [PM-TIM #PM_TIM] |

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ ODU Layer Tandem Connection Monitoring Registers ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


+++ TCM_STS_PTR - TCM Status Pointer (TCM_STS_PTR_OFFSET) +++[TCM_STS_PTR]

 ||  Bit   |  Name       | Type |  Description                                                                                         |
  | 15..3  |    -        |      | Reserved for future use                                                                              |
  |  2..0  |  STS_PTR    |  RW  | TCM Status Pointer. Addresses a specific TCM channel for status reading: {br} 0 - TCM1 {br} . {br} . {br} 5 - TCM6 |


+++ ODU_TCM_STS - ODU Tandem Connection Status (ODU_TCM_STS_OFFSET) +++[ODU_TCM_STS]

This register reports the status of the TCM channel addressed by \TCM_STS_PTR\. All alarm indications remain latched until the register
has been read by the  microprocessor. In cases where multiple OTN framers are instanced, the register \OTU_STS_PTR\ is used to select
which instance the \ODU_TCM_STS\ and \TCM_STS_PTR\ are related to. If only one OTN instance is present, \OTU_STS_PTR\ is ignored.

 ||  Bit   |  Name         | Type |  Description                                                                                        |
  | 15..10 |               |      |                                                                     |
  |   9    |  \TCM_LTC\    |  RC  | Loss of Tandem Connection                                           |
  |   8    |  \TCM_BIP\    |  RC  | Indicates that a BIP-8 error has occurred                           |
  |   7    |  \TCM_BEI\    |  RC  | Indicates that a backward error indication has been received        |
  |   6    |      -        |      | Reserved                                                            |
  |   5    |  \TCM_BIAE\   |  RC  | TCM Incommig alignment error defect                                 |
  |   4    |  \TCM_AIS\    |  RC  | TCM Backward incoming alignment error defect                        |
  |   3    |  \TCM_OCI\    |  RC  | TCM Trail trace identifier mismatch                                 |
  |   2    |  \TCM_LCK\    |  RC  | TCM Alarm indication signal defect                                  |
  |   1    |  \TCM_BDI\    |  RC  | TCM Backward defect indication defect                               |
  |   0    |  \TCM_TIM\    |  RC  | TCM Trail trace identifier mismatch                                 |


+++ TCM_BEI_CNT - ODU TCM BEI Counter (TCM_BEI_CNT_OFFSET) +++[TCM_BEI_CNT]

 ||  Bit   |  Name                | Type  |  Description                                                          |
  |   15   |    -                 |       |  Reserved for future use                                              |
  | 14..0  |  [BEI_CNT #TCM_BEI]  |  RLC  |  TCM BEI error counter of the TCM channel addressed by \TCM_STS_PTR\  |


+++ TCM_BIP_CNT - ODU TCM BIP Error Counter (TCM_BIP_CNT_OFFSET) +++[TCM_BIP_CNT]

 ||  Bit   |  Name                | Type  |  Description                                                           |
  |   15   |    -                 |       |  Reserved for future use                                               |
  | 14..0  |  [BIP_CNT #TCM_BIP]  |  RLC  |  TCM BIP-8 error counter of the TCM channel addressed by \TCM_STS_PTR\ |


+++ TCM_CFG_PTR - TCM Configuration Pointer (TCM_CFG_PTR_OFFSET) +++[TCM_CFG_PTR]

 ||  Bit   |  Name       | Type |  Description                                                                                                  |
  | 15..3  |    -        |      | Reserved for future use                                                                                       |
  |  2..0  |  STS_PTR    |  RW  | TCM Status Pointer. Addresses a specific TCM channel for configuration: {br} 0 - TCM1 {br} . {br} . {br} 5 - TCM6  |


+++ ODU_TCM_CFG - ODU Tandem Connection Configuration (ODU_TCM_CFG_OFFSET) +++[ODU_TCM_CFG]

This register is used to set the operational configuration of the TCM channel addressed by \TCM_CFG_PTR\. In cases where multiple OTN
framers are instanced, the register \OTU_CFG_PTR\ is used to select which instance the \ODU_TCM_CFG\ and \TCM_CFG_PTR\ are related to.
If only one OTN instance is present, \OTU_CFG_PTR\ is ignored.

 ||  Bit   |  Name           | Type |  Description                                                                 |
  | 19..3  |     -           |      | Reserved for future use                                                      |
  |   2    |  TCM_MODE       |  RW  | Selects the operation mode of TCM channel addressed by \TCM_CFG_PTR\: {br} 0 - Transparent {br} 1 - Operational     |
  |   1    |  TTI_DAPI_EVAL  |  RW  | Enables evaluation of DAPI field in the TCM TTI string. When set to '0', a DAPI mismatch will not generate TCM-TIM  |
  |   0    |  TTI_SAPI_EVAL  |  RW  | Enables evaluation of SAPI field in the TCM TTI string. When set to '0', a SAPI mismatch will not generate TCM-TIM  |


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ FTFL Access ++[FTFL_ACCESS]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

+++ FTFL_ACCESS_CTRL - FTFL Access Control (FTFL_ACCESS_CTRL_OFFSET) +++[FTFL_ACCESS_CTRL]

 ||  Bit   |  Name      | Type |  Description                                                              |
  | 19..1  |   -        |      | Reserved for future use                                                   |
  |   0    | FTFL_SEL   |  RW  | FTFL selection. Writing this register also causes the FTFL_DATA pointer to be reset: {br} 0 - Transmitted FTFL {br} 1 - Received FTFL      |


+++ FTFL_DATA - FTFL Data Register (FTFL_DATA_OFFSET) +++[FTFL_DATA]

 ||  Bit    |  Name      | Type |  Description                                                                                          |
  |  19..8  |    -       |      | Reserved for future use                                                                               |
  |  7..0   | FTFL_DATA  |  RW  | This register is used to access the transmitted and received [FTFL #FTFL_ACCESS], according to configured in register \FTFL_ACCESS_CTRL\[FTFL_SEL]. The read/write pointer is automatically incremented by reading or writing this register |

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ OPU Layer Path Monitoring Registers ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

+++ OPU_CFG - OPU Configuration (OPU_CFG_OFFSET) +++[OPU_CFG]

 ||  Bit   |   Name          | Type |  Description                                                                                                      |
  |  19..2 |     -           |      | Reserved for future use                                                                                           |
  |   2    |  CBR_MAP_MODE   |  RW  | Selects the Client data mapping mode: {br} 0 - Asynchronous {br} 1 - Bit synchronous                              |
  |   1    |  OPU_PRBS_EN    |  RW  | This bit enables the mapping of a (2^31 – 1) PRBS test signal as specified in O.150 into the OPU payload          |
  |   0    |  OPU_TSE_ADD    |  RW  | Writing a '1' and then a '0' to this bit causes a single bit error to be inserted into the OPU PRBS sequence      |

+++ OPU_STS - OPU Status (OPU_STS_OFFSET) +++[OPU_STS]

This register reports the OPU layer status. All alarm indications remain latched until the register has been read by the  microprocessor.

 ||  Bit   |   Name         | Type |  Description                                                                                     |
  |  19..4 |     -          |      | Reserved for future use                                                                          |
  |   3    |  OPU_LSS       |  RC  | Indicates that a PRBS "Loss of Sequence Synchronization" has been detected in the OPU payload    |
  |   2    |  OPU_TSE       |  RC  | Indicates that a PRBS error has been detected in the OPU payload                                 |
  |   1    |  CBR_AIS       |  RC  | Client alarm indication signal                                                                   |
  |   0    |  OPU_PLM       |  RC  | OTU Payload Mismatch                                                                             |

+++ OPU_EXP_PT - ODU Expected Payload Types (OPU_EXP_PT_OFFSET) +++[OPU_EXP_PT]

 ||  Bit   |  Name       | Type |  Description                                                        |
  | 15..8  |  EXP_PT_1   |  RW  | Expected payload type 1                                             |
  |  7..0  |  EXP_PT_2   |  RW  | Expected payload type 2                                             |

+++ OPU_TX_PT - ODU Tx Payload Type (OPU_TX_PT_OFFSET) +++[OPU_TX_PT]

 ||  Bit   |  Name       | Type |  Description                                                        |
  | 15..8  |    -        |      | Reserved for future use                                             |
  |  7..0  |  TX_PT      |  RW  | Transmit payload type (according to G.709 Table 15-8)               |

+++ OPU_RX_PT - OPU Rx Payload Type (OPU_RX_PT_OFFSET) +++[OPU_RX_PT]

 ||  Bit   |  Name       | Type |  Description                                                        |
  | 15..8  |    -        |      | Reserved for future use                                             |
  |  7..0  |  RX_PT      |  RW  | Received payload type                                               |

+++ OPU_TSE_CNT - OPU PRBS Test Sequence Error Counter (OPU_TSE_CNT_OFFSET) +++[OPU_TSE_CNT]

 ||  Bit   |  Name       | Type  |  Description                                                       |
  | 15..0  |  ERR_CNT    | RLC   | OPU PRBS Error Counter                                             |

+++ TX_PJUST_CNT - Tx Positive Justification Events Counter +++[TX_PJUST_CNT]

 ||  Bit   |  Name         | Type  |  Description                                         |
  | 15..0  |  TX_PJUST_CNT |  RLC  | Tx positive justification events counter             |

+++ TX_NJUST_CNT - Tx Negative Justification Events Counter +++[TX_NJUST_CNT]

 ||  Bit   |  Name         | Type  |  Description                                         |
  | 15..0  |  TX_NJUST_CNT |  RLC  | Tx negative justification events counter             |

+++ RX_PJUST_CNT - Rx Positive Justification Events Counter +++[RX_PJUST_CNT]

 ||  Bit   |  Name         | Type  |  Description                                         |
  | 15..0  |  RX_PJUST_CNT |  RLC  | Rx positive justification events counter             |

+++ RX_NJUST_CNT - Rx Negative Justification Events Counter +++[RX_NJUST_CNT]

 ||  Bit   |  Name         | Type  |  Description                                         |
  | 15..0  |  RX_NJUST_CNT |  RLC  | Rx negative justification events counter             |


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ TTI Access  ++[TTI_ACCESS]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The Trail Trace Identifier (TTI) read and write access is performed through a dedicated set of registers, referred as TTI Access
registers. These registers are \TTI_ACCESS_CTRL\ and \TTI_DATA\. The following TTI access operations are supported:

  - Read/write the transmitted SM/PM/TCM string
  - Read/write the expected SM/PM/TCM string
  - Read the received (accepted) SM/PM/TCM string
  -

In order to avoid a wrong received TTI to be reported during bit errors, the APIs must be present for three consecutive multiframes
before being accepted. This is the persistence process described in G.789 appendix IV.2. The persistence process for SAPI, DAPI and
Operator Specific fields run independently of each other.

\TTI_ACCESS_CTRL\ is used to select the identifier which will be accessed (//i.e.//: OTU SM, OTU PM or ODU TCMi). This register also
selects the string type (//i.e.//: transmitted, received or expected).

Once the desired TTI has been selected via \TTI_ACCESS_CTRL\, the characters of the string can be sequentially read or write through
register \TTI_DATA\. Field //TTI_PTR// of register \TTI_ACCESS_CTRL\ can be used to set the read/write pointer to a specific location.
This can be useful to configure only a subset of the TTI string, like DAPI or Operator Specific Field. 


+++ TTI_ACCESS_CTRL - Trail Trace Identifier Access Control (TTI_ACCESS_CTRL_OFFSET) +++[TTI_ACCESS_CTRL]

 ||  Bit     |  Name     | Type |  Description                                                                                      |
  |  19..11  |   -       |      | Reserved for future use                                                                           |
  |  10..9   | TTI_TYPE  |  RW  | Selects the TTI type: {br} 0 - Transmitted TTI {br} 1 - Expected TTI {br} 2 - Received TTI        |
  |  8..6    | TTI_SEL   |  RW  | Addresses a specific TTI String: {br} 0 - OTU SM {br} 1 - ODU PM {br} 2 - ODU TCM1 {br} . {br} . {br} 7 - ODU TCM6 |
  |  5..0    | TTI_PTR   |  RW  | Sets the read/write pointer to a specific location (0 to 63)     inside the TTI string            |


+++ TTI_DATA - Trail Trace Identifier Data Register (TTI_DATA_OFFSET) +++[TTI_DATA]

 ||  Bit    |  Name    | Type |  Description                                                                                          |
  |  19..8  |    -     |      | Reserved for future use                                                                               |
  |  7..0   | TTI_CHAR |  RW  | This register is used to read/write the characters of the string addressed by \TTI_ACCESS_CTRL\[TTI_TYPE] and \TTI_ACCESS_CTRL\[TTI_SEL]. The read/write pointer is automatically incremented by writing to this register. The pointer can be set to a specific location by writing the field //TTI_PTR// of register \TTI_ACCESS_CTRL\ |


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
++ FEC Registers ++
%%%%%%%%%%%%%%%%%%%%%%%%%%%%


+++ FEC_STS_PTR - FEC Status Pointer (FEC_STS_PTR_OFFSET) +++[FEC_STS_PTR]

 ||  Bit    |  Name    | Type |  Description                                                                                          |
  |  19..4  |    -     |      | Reserved for future use                                                                               |
  |   3..0  |  SUBROW  | RW   | Addresses one of the 16 FEC sub-rows for status reading. The contents of registers \FEC_CORRERR_CNT_HI\, \FEC_CORRERR_CNT_LO\ and \FEC_UNCORR_CNT\ are related to this sub-row: {br} 0 - Sub-row #1 {br} . {br} . {br} 15 - Sub-row #16 |


+++ FEC_CORRERR_CNT_HI - FEC Corrected Errors Counter Higher Bits (FEC_CORRERR_CNT_HI_OFFSET) +++[FEC_CORRERR_CNT_HI]

 ||  Bit    |  Name          | Type  |  Description                                                                                    |
  |  19..4  |    -           |       | Reserved for future use                                                                         |
  |  3..0   | CORRERR_CNT_HI |  RO   | This register contains the higher bits of the counter that accumulates the number of errors corrected by the FEC sub-row given by \FEC_STS_PTR\[SUBROW] |


+++ FEC_CORRERR_CNT_LO - FEC Corrected Errors Counter Lower Bits (FEC_CORRERR_CNT_LO_OFFSET) +++[FEC_CORRERR_CNT_LO]

 ||  Bit   |  Name          | Type  |  Description                                                                                     |
  | 15..0  | CORRERR_CNT_LO |  RLC  | This register contains the lower bits of the counter that accumulates the number of errors corrected by the FEC sub-row given by \FEC_STS_PTR\[SUBROW] |


+++ FEC_UNCORR_CNT - FEC Uncorrectable Errors Counter (FEC_UNCORR_CNT_OFFSET) +++[FEC_UNCORR_CNT]

 ||  Bit   |  Name       | Type  |  Description                                                                  |
  | 15..14 |     -       |  RC   | Reserved for future use                                                                                                              |
  | 13..0  | UNCORR_CNT  |  RLC  | Number of received sub-rows containing uncorrectable errors (this count considers only the sub-row addressed by \FEC_STS_PTR\[SUBROW]) |

